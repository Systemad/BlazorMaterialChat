@page "/"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using BlazorMaterialChat.Client.ViewModels
@using InputType = MudBlazor.InputType

@inject ILoginViewModel LoginViewModel
@inject NavigationManager NavigationManager

<div style="max-width: 400px;">
    
    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
        <MudTabPanel Text="Sign in">
            <MudText>Sign in to your account</MudText>
            <MudTextField @bind-Value="LoginViewModel.Username" Label="Enter your username" Variant="Variant.Text" />
            <MudTextField InputType="InputType.Password" @bind-Value="LoginViewModel.Password" Label="Enter your password" Variant="Variant.Text" />
            <br/>
            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="LoginUser">Login</MudButton>
        </MudTabPanel>
        <MudTabPanel Text="Sign up">
            <MudText>Sign up</MudText>
            <MudTextField T="string" Label="Username" Required="true" RequiredError="User name is required!"/>
            <MudTextField T="string" Label="Password" HelperText="Choose a strong password" @ref="_pwField1"
                          InputType="InputType.Password"
                          Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                          RequiredError="Password is required!"/>
            <MudTextField T="string"
                          Label="Password" HelperText="Repeat the password" InputType="InputType.Password"
                          Validation="@(new Func<string, string>(PasswordMatch))"/>
            <MudCheckBox T="bool" Required="true" RequiredError="You must agree" Class="ml-n2"
                         Label="By signing up you agree with Terms of Services!"/>
            <br/>
            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@(() => _form.Validate())">Register</MudButton>
        </MudTabPanel>
    </MudTabs>
    
    @if (_success)
    {
        <p>Login sucess</p>
    }
</div>
@code {
    
    // TO NAVIGATE USE
    // NavigationManager.NavigateTo(INSERT PAGE);

    bool _success;
    string[] errors = { };

    MudTextField<string> _pwField1;
    MudForm _form;

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    private string PasswordMatch(string arg)
    {
        if (_pwField1.Value == arg)
            return "password does not match";
        return null;
    }

    public async Task LoginUser()
    {
        await LoginViewModel.LoginUser();
        NavigationManager.NavigateTo("/profile", true);
    }
}